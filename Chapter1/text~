1.1
int Select(int a[], int N, int k){
    for(int i=0;i<N-1;i++){
        for(int j=i;j<N-1;j++){
	    if(a[j]<a[j+1]){
	        int t=a[j+1];
		a[j+1]=a[j];
		a[j]=t;
	    }
	}
    }
    return a[k];
}
time:O(N^2)

1.2
int Find(string ini,string dic[],int tot){
    for(int i=0;i<tot;i++){
       if(dic[i]==ini)
           return 1;
    }
    return 0;
}

void Puzzle(char a[][],int N,string dic[],int tot){
    for(int i=0;i<N;i++){
        for(int j=0;i<N;j++){
	    string t="";t+=a[i][j];
	    for(int m=0;m<N-i-1;m++){
	        t+=a[i+m][j];
		if(Find(t,dic[],tot))printf("%s\n",t);
	    }
	    t="";t+=a[i][j];
	    for(int m=0;m<N-j-1;m++){
	        t+=a[i][j+m];
		if(Find(t,dic[],tot))printf("%s\n",t);
	    }
	    t="";t+=a[i][j];
	    if(i!=N-1 && j!=N-1){
	        int max=i>j?i:j;
		for(int m=0;m<N-max-1;m++){
	 	    t+=a[i+m][j+[m];]
		    if(Find(t,dic[],tot))printf("%s\n",t);
		}
	    }
	}
    }
}

1.3
void PrintOut(int N){
    if(N>=10)
        PrintOut(N/10);
    PrintDigit(N%10);
}

void Print(double a){
    if(a>0){
        int inie=(int)a;
	PrintOut(inie);
	a=a-inie;
	int cnt;
	while(1){
	    a*=10;
	    if(a==((int)a))break;
	}
	printf(".");
	PrintOut(a);
    }
    else{
        printf("-");
	Print(-a);
    }
}

1.4
/*FileOne Begin*/
#include <fstream>

ProcessFile(const char *FileName){
    ifstream in(FileName);
    ofstream out;
    out.open(outer);
    if(out)out<<in;
    in.close();
}
/*FileOne End*/

/*FileTwo Begin*/
#include "FileOne"

int main(){
    ProcessFile("FileOne");
    return 0;
}
/*FileTwo End*/

1.5
(1) e^x>x -> X>log(X)
(2) log(A^B)=log(A*A*...*A)=log(A)+log(A)+...+log(A)=Blog(A)

1.6
a.1/3
b.4/9
c.?
d.?

1.7

1.8
2^100(mod 5)=1

1.9
